Commands
====================================================================================

+ List running containers
docker ps

+ List all images
docker images

+ Pull down an image
docker pull <image_name>[:<version>]

+ Run a container instance
docker run -it <image_name> <cmd_from_image>

  ++ Run a clean image use: "--rm"
  ++ To share a directory or volume with the container use: "-v "<host_filesystem_directory>:<maps_to_container_filesystem_diferectory>""
     eg. -v "${PWD}:/app" (Windows)
     eg. -v "$PWD:/app" (Linux/Mac)

eg. docker run -it ubuntu bash (run the ubuntu image and launch the bash shell)

+ To exit a running container instance
<CTL> + P + Q (Windows)

+ To restore a previously detached container instance
docker attach <container_name> | <container_id>

+ Customise an image by defining a Dockerfile (Windows) or .dockerfile (Linux/Mac)
Syntax:
FROM <image>
RUN <cmd> [&& <cmd>]
CMD <cmd>

eg.
FROM ubuntu
RUN apt-get update -yqq && apt-get install -yqq wget
CMD bash

+ Build you customised image
docker build -t <image_name> (from directory with Dockerfile)

+ Publish your own image
docker tag <image_name> <hub_username/image_name>
docker push <hub_username/image_name>

run "docker login" as required


Difference between VM and Containers
====================================================================================

+++++++++++    +++++++++++
|   App   |    |   App   |
|   Deps  |    |   Deps  |
|    OS   |    |         |  <-- Key difference is no OS in a container.
+++++++++++    +++++++++++      Docker users Linux cgroups, namespaces and chroots
|    OS   |    |    OS   |      to interact with the base OS running on the server.
+++++++++++    +++++++++++      No hypervisor needed.
|  Server |    |  Server |
+++++++++++    +++++++++++


